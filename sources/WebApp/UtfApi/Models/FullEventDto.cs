// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace X39.UnitedTacticalForces.WebApp.Api.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class FullEventDto : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The acceptedCount property</summary>
        public int? AcceptedCount { get; set; }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The description property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The hostedBy property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::X39.UnitedTacticalForces.WebApp.Api.Models.PlainUserDto? HostedBy { get; set; }
#nullable restore
#else
        public global::X39.UnitedTacticalForces.WebApp.Api.Models.PlainUserDto HostedBy { get; set; }
#endif
        /// <summary>The image property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public byte[]? Image { get; set; }
#nullable restore
#else
        public byte[] Image { get; set; }
#endif
        /// <summary>The imageMimeType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ImageMimeType { get; set; }
#nullable restore
#else
        public string ImageMimeType { get; set; }
#endif
        /// <summary>The isVisible property</summary>
        public bool? IsVisible { get; set; }
        /// <summary>The maybeCount property</summary>
        public int? MaybeCount { get; set; }
        /// <summary>The minimumAccepted property</summary>
        public int? MinimumAccepted { get; set; }
        /// <summary>The modPackDefinitionIsActive property</summary>
        public bool? ModPackDefinitionIsActive { get; set; }
        /// <summary>The modPackDefinitionIsComposition property</summary>
        public bool? ModPackDefinitionIsComposition { get; set; }
        /// <summary>The modPackDefinitionOwner property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::X39.UnitedTacticalForces.WebApp.Api.Models.PlainUserDto2? ModPackDefinitionOwner { get; set; }
#nullable restore
#else
        public global::X39.UnitedTacticalForces.WebApp.Api.Models.PlainUserDto2 ModPackDefinitionOwner { get; set; }
#endif
        /// <summary>The modPackDefinitionPrimaryKey property</summary>
        public long? ModPackDefinitionPrimaryKey { get; set; }
        /// <summary>The modPackDefinitionTimeStampCreated property</summary>
        public DateTimeOffset? ModPackDefinitionTimeStampCreated { get; set; }
        /// <summary>The modPackDefinitionTitle property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ModPackDefinitionTitle { get; set; }
#nullable restore
#else
        public string ModPackDefinitionTitle { get; set; }
#endif
        /// <summary>The modPackRevisionHtml property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ModPackRevisionHtml { get; set; }
#nullable restore
#else
        public string ModPackRevisionHtml { get; set; }
#endif
        /// <summary>The modPackRevisionIsActive property</summary>
        public bool? ModPackRevisionIsActive { get; set; }
        /// <summary>The modPackRevisionPrimaryKey property</summary>
        public long? ModPackRevisionPrimaryKey { get; set; }
        /// <summary>The modPackRevisionTimeStampCreated property</summary>
        public DateTimeOffset? ModPackRevisionTimeStampCreated { get; set; }
        /// <summary>The modPackRevisionTimeStampDownloaded property</summary>
        public DateTimeOffset? ModPackRevisionTimeStampDownloaded { get; set; }
        /// <summary>The modPackRevisionUpdatedBy property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::X39.UnitedTacticalForces.WebApp.Api.Models.PlainUserDto2? ModPackRevisionUpdatedBy { get; set; }
#nullable restore
#else
        public global::X39.UnitedTacticalForces.WebApp.Api.Models.PlainUserDto2 ModPackRevisionUpdatedBy { get; set; }
#endif
        /// <summary>The owner property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::X39.UnitedTacticalForces.WebApp.Api.Models.PlainUserDto? Owner { get; set; }
#nullable restore
#else
        public global::X39.UnitedTacticalForces.WebApp.Api.Models.PlainUserDto Owner { get; set; }
#endif
        /// <summary>The primaryKey property</summary>
        public Guid? PrimaryKey { get; set; }
        /// <summary>The rejectedCount property</summary>
        public int? RejectedCount { get; set; }
        /// <summary>The scheduledFor property</summary>
        public DateTimeOffset? ScheduledFor { get; set; }
        /// <summary>The scheduledForOriginal property</summary>
        public DateTimeOffset? ScheduledForOriginal { get; set; }
        /// <summary>The terrainImage property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public byte[]? TerrainImage { get; set; }
#nullable restore
#else
        public byte[] TerrainImage { get; set; }
#endif
        /// <summary>The terrainImageMimeType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TerrainImageMimeType { get; set; }
#nullable restore
#else
        public string TerrainImageMimeType { get; set; }
#endif
        /// <summary>The terrainIsActive property</summary>
        public bool? TerrainIsActive { get; set; }
        /// <summary>The terrainPrimaryKey property</summary>
        public long? TerrainPrimaryKey { get; set; }
        /// <summary>The terrainTitle property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TerrainTitle { get; set; }
#nullable restore
#else
        public string TerrainTitle { get; set; }
#endif
        /// <summary>The timeStampCreated property</summary>
        public DateTimeOffset? TimeStampCreated { get; set; }
        /// <summary>The title property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Title { get; set; }
#nullable restore
#else
        public string Title { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::X39.UnitedTacticalForces.WebApp.Api.Models.FullEventDto"/> and sets the default values.
        /// </summary>
        public FullEventDto()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::X39.UnitedTacticalForces.WebApp.Api.Models.FullEventDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::X39.UnitedTacticalForces.WebApp.Api.Models.FullEventDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::X39.UnitedTacticalForces.WebApp.Api.Models.FullEventDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "acceptedCount", n => { AcceptedCount = n.GetIntValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "hostedBy", n => { HostedBy = n.GetObjectValue<global::X39.UnitedTacticalForces.WebApp.Api.Models.PlainUserDto>(global::X39.UnitedTacticalForces.WebApp.Api.Models.PlainUserDto.CreateFromDiscriminatorValue); } },
                { "image", n => { Image = n.GetByteArrayValue(); } },
                { "imageMimeType", n => { ImageMimeType = n.GetStringValue(); } },
                { "isVisible", n => { IsVisible = n.GetBoolValue(); } },
                { "maybeCount", n => { MaybeCount = n.GetIntValue(); } },
                { "minimumAccepted", n => { MinimumAccepted = n.GetIntValue(); } },
                { "modPackDefinitionIsActive", n => { ModPackDefinitionIsActive = n.GetBoolValue(); } },
                { "modPackDefinitionIsComposition", n => { ModPackDefinitionIsComposition = n.GetBoolValue(); } },
                { "modPackDefinitionOwner", n => { ModPackDefinitionOwner = n.GetObjectValue<global::X39.UnitedTacticalForces.WebApp.Api.Models.PlainUserDto2>(global::X39.UnitedTacticalForces.WebApp.Api.Models.PlainUserDto2.CreateFromDiscriminatorValue); } },
                { "modPackDefinitionPrimaryKey", n => { ModPackDefinitionPrimaryKey = n.GetLongValue(); } },
                { "modPackDefinitionTimeStampCreated", n => { ModPackDefinitionTimeStampCreated = n.GetDateTimeOffsetValue(); } },
                { "modPackDefinitionTitle", n => { ModPackDefinitionTitle = n.GetStringValue(); } },
                { "modPackRevisionHtml", n => { ModPackRevisionHtml = n.GetStringValue(); } },
                { "modPackRevisionIsActive", n => { ModPackRevisionIsActive = n.GetBoolValue(); } },
                { "modPackRevisionPrimaryKey", n => { ModPackRevisionPrimaryKey = n.GetLongValue(); } },
                { "modPackRevisionTimeStampCreated", n => { ModPackRevisionTimeStampCreated = n.GetDateTimeOffsetValue(); } },
                { "modPackRevisionTimeStampDownloaded", n => { ModPackRevisionTimeStampDownloaded = n.GetDateTimeOffsetValue(); } },
                { "modPackRevisionUpdatedBy", n => { ModPackRevisionUpdatedBy = n.GetObjectValue<global::X39.UnitedTacticalForces.WebApp.Api.Models.PlainUserDto2>(global::X39.UnitedTacticalForces.WebApp.Api.Models.PlainUserDto2.CreateFromDiscriminatorValue); } },
                { "owner", n => { Owner = n.GetObjectValue<global::X39.UnitedTacticalForces.WebApp.Api.Models.PlainUserDto>(global::X39.UnitedTacticalForces.WebApp.Api.Models.PlainUserDto.CreateFromDiscriminatorValue); } },
                { "primaryKey", n => { PrimaryKey = n.GetGuidValue(); } },
                { "rejectedCount", n => { RejectedCount = n.GetIntValue(); } },
                { "scheduledFor", n => { ScheduledFor = n.GetDateTimeOffsetValue(); } },
                { "scheduledForOriginal", n => { ScheduledForOriginal = n.GetDateTimeOffsetValue(); } },
                { "terrainImage", n => { TerrainImage = n.GetByteArrayValue(); } },
                { "terrainImageMimeType", n => { TerrainImageMimeType = n.GetStringValue(); } },
                { "terrainIsActive", n => { TerrainIsActive = n.GetBoolValue(); } },
                { "terrainPrimaryKey", n => { TerrainPrimaryKey = n.GetLongValue(); } },
                { "terrainTitle", n => { TerrainTitle = n.GetStringValue(); } },
                { "timeStampCreated", n => { TimeStampCreated = n.GetDateTimeOffsetValue(); } },
                { "title", n => { Title = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("acceptedCount", AcceptedCount);
            writer.WriteStringValue("description", Description);
            writer.WriteObjectValue<global::X39.UnitedTacticalForces.WebApp.Api.Models.PlainUserDto>("hostedBy", HostedBy);
            writer.WriteByteArrayValue("image", Image);
            writer.WriteStringValue("imageMimeType", ImageMimeType);
            writer.WriteBoolValue("isVisible", IsVisible);
            writer.WriteIntValue("maybeCount", MaybeCount);
            writer.WriteIntValue("minimumAccepted", MinimumAccepted);
            writer.WriteBoolValue("modPackDefinitionIsActive", ModPackDefinitionIsActive);
            writer.WriteBoolValue("modPackDefinitionIsComposition", ModPackDefinitionIsComposition);
            writer.WriteObjectValue<global::X39.UnitedTacticalForces.WebApp.Api.Models.PlainUserDto2>("modPackDefinitionOwner", ModPackDefinitionOwner);
            writer.WriteLongValue("modPackDefinitionPrimaryKey", ModPackDefinitionPrimaryKey);
            writer.WriteDateTimeOffsetValue("modPackDefinitionTimeStampCreated", ModPackDefinitionTimeStampCreated);
            writer.WriteStringValue("modPackDefinitionTitle", ModPackDefinitionTitle);
            writer.WriteStringValue("modPackRevisionHtml", ModPackRevisionHtml);
            writer.WriteBoolValue("modPackRevisionIsActive", ModPackRevisionIsActive);
            writer.WriteLongValue("modPackRevisionPrimaryKey", ModPackRevisionPrimaryKey);
            writer.WriteDateTimeOffsetValue("modPackRevisionTimeStampCreated", ModPackRevisionTimeStampCreated);
            writer.WriteDateTimeOffsetValue("modPackRevisionTimeStampDownloaded", ModPackRevisionTimeStampDownloaded);
            writer.WriteObjectValue<global::X39.UnitedTacticalForces.WebApp.Api.Models.PlainUserDto2>("modPackRevisionUpdatedBy", ModPackRevisionUpdatedBy);
            writer.WriteObjectValue<global::X39.UnitedTacticalForces.WebApp.Api.Models.PlainUserDto>("owner", Owner);
            writer.WriteGuidValue("primaryKey", PrimaryKey);
            writer.WriteIntValue("rejectedCount", RejectedCount);
            writer.WriteDateTimeOffsetValue("scheduledFor", ScheduledFor);
            writer.WriteDateTimeOffsetValue("scheduledForOriginal", ScheduledForOriginal);
            writer.WriteByteArrayValue("terrainImage", TerrainImage);
            writer.WriteStringValue("terrainImageMimeType", TerrainImageMimeType);
            writer.WriteBoolValue("terrainIsActive", TerrainIsActive);
            writer.WriteLongValue("terrainPrimaryKey", TerrainPrimaryKey);
            writer.WriteStringValue("terrainTitle", TerrainTitle);
            writer.WriteDateTimeOffsetValue("timeStampCreated", TimeStampCreated);
            writer.WriteStringValue("title", Title);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
