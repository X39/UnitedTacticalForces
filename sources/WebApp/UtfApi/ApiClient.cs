// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using Microsoft.Kiota.Serialization.Form;
using Microsoft.Kiota.Serialization.Json;
using Microsoft.Kiota.Serialization.Multipart;
using Microsoft.Kiota.Serialization.Text;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
using X39.UnitedTacticalForces.WebApp.Api.Events;
using X39.UnitedTacticalForces.WebApp.Api.GameServers;
using X39.UnitedTacticalForces.WebApp.Api.ModPacks;
using X39.UnitedTacticalForces.WebApp.Api.ResourceClaim;
using X39.UnitedTacticalForces.WebApp.Api.Roles;
using X39.UnitedTacticalForces.WebApp.Api.Terrains;
using X39.UnitedTacticalForces.WebApp.Api.UpdateStream;
using X39.UnitedTacticalForces.WebApp.Api.Users;
using X39.UnitedTacticalForces.WebApp.Api.Wiki;
namespace X39.UnitedTacticalForces.WebApp.Api
{
    /// <summary>
    /// The main entry point of the SDK, exposes the configuration and the fluent API.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ApiClient : BaseRequestBuilder
    {
        /// <summary>The events property</summary>
        public global::X39.UnitedTacticalForces.WebApp.Api.Events.EventsRequestBuilder Events
        {
            get => new global::X39.UnitedTacticalForces.WebApp.Api.Events.EventsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The gameServers property</summary>
        public global::X39.UnitedTacticalForces.WebApp.Api.GameServers.GameServersRequestBuilder GameServers
        {
            get => new global::X39.UnitedTacticalForces.WebApp.Api.GameServers.GameServersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The modPacks property</summary>
        public global::X39.UnitedTacticalForces.WebApp.Api.ModPacks.ModPacksRequestBuilder ModPacks
        {
            get => new global::X39.UnitedTacticalForces.WebApp.Api.ModPacks.ModPacksRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The resourceClaim property</summary>
        public global::X39.UnitedTacticalForces.WebApp.Api.ResourceClaim.ResourceClaimRequestBuilder ResourceClaim
        {
            get => new global::X39.UnitedTacticalForces.WebApp.Api.ResourceClaim.ResourceClaimRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The roles property</summary>
        public global::X39.UnitedTacticalForces.WebApp.Api.Roles.RolesRequestBuilder Roles
        {
            get => new global::X39.UnitedTacticalForces.WebApp.Api.Roles.RolesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The terrains property</summary>
        public global::X39.UnitedTacticalForces.WebApp.Api.Terrains.TerrainsRequestBuilder Terrains
        {
            get => new global::X39.UnitedTacticalForces.WebApp.Api.Terrains.TerrainsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The updateStream property</summary>
        public global::X39.UnitedTacticalForces.WebApp.Api.UpdateStream.UpdateStreamRequestBuilder UpdateStream
        {
            get => new global::X39.UnitedTacticalForces.WebApp.Api.UpdateStream.UpdateStreamRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The users property</summary>
        public global::X39.UnitedTacticalForces.WebApp.Api.Users.UsersRequestBuilder Users
        {
            get => new global::X39.UnitedTacticalForces.WebApp.Api.Users.UsersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The wiki property</summary>
        public global::X39.UnitedTacticalForces.WebApp.Api.Wiki.WikiRequestBuilder Wiki
        {
            get => new global::X39.UnitedTacticalForces.WebApp.Api.Wiki.WikiRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::X39.UnitedTacticalForces.WebApp.Api.ApiClient"/> and sets the default values.
        /// </summary>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ApiClient(IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}", new Dictionary<string, object>())
        {
            ApiClientBuilder.RegisterDefaultSerializer<JsonSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<TextSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<FormSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<MultipartSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<JsonParseNodeFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<TextParseNodeFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<FormParseNodeFactory>();
            if (string.IsNullOrEmpty(RequestAdapter.BaseUrl))
            {
                RequestAdapter.BaseUrl = "http://localhost:5148";
            }
            PathParameters.TryAdd("baseurl", RequestAdapter.BaseUrl);
        }
    }
}
#pragma warning restore CS0618
