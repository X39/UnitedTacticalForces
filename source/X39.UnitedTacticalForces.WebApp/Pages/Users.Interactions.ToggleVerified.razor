@using System.ComponentModel.DataAnnotations
@using System.Diagnostics.Contracts
@using X39.UnitedTacticalForces.WebApp.Services
@using X39.UnitedTacticalForces.WebApp.Services.UserRepository
@inject IUserRepository UserRepository
@inject MeService MeService
@inject IStringLocalizer<Language> Localizer
@if (MeService.IsAuthenticated && User.PrimaryKey != MeService.User.PrimaryKey && MeService.IsInRoleOrAdmin(Claims.UserVerify))
{
    <MudTooltip>
        <TooltipContent>
            <MudText>@Localizer[nameof(Language.Pages_Users_ToggleVerified_ToolTip)]</MudText>
        </TooltipContent>
        <ChildContent>
            <MudSwitch
                ThumbIcon="@((User.IsVerified ?? false) ? Icons.Material.Filled.CheckCircleOutline : Icons.Material.Filled.DoDisturb)"
                Color="Color.Success"
                Checked="@(User.IsVerified ?? false)"
                CheckedChanged="@((bool flag) => ToggleUserVerifiedAsync(flag))"/>
        </ChildContent>
    </MudTooltip>
}

@code {

    [Parameter, EditorRequired, Required]
    public User User { get; set; } = null!;

    private async Task ToggleUserVerifiedAsync(bool flag)
    {
        Contract.Assert(User.PrimaryKey is not null);
        await UserRepository.ToggleVerifiedUserAsync(User.PrimaryKey.Value, flag)
            .ConfigureAwait(false);
        User.IsVerified = flag;
    }

}