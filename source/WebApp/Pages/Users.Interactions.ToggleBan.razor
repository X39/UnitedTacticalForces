@using System.ComponentModel.DataAnnotations
@using System.Diagnostics.Contracts
@using X39.UnitedTacticalForces.WebApp.Services
@using X39.UnitedTacticalForces.WebApp.Services.UserRepository
@inject IUserRepository            UserRepository
@inject MeService                  Me
@inject IStringLocalizer<Language> Localizer
@if (Me.HasClaimOrUserAdmin(Claims.User.Ban))
{
    <MudTooltip>
        <TooltipContent>
            <MudText>@Localizer[nameof(Language.Pages_Users_ToggleBan_ToolTip)]</MudText>
        </TooltipContent>
        <ChildContent>
            <MudToggleIconButton
                ToggledIcon="@Icons.Material.Filled.DoDisturb"
                Icon="@Icons.Material.Filled.CheckCircleOutline"
                Color="Color.Success"
                ToggledColor="Color.Error"
                Toggled="@(User.IsBanned ?? false)"
                ToggledChanged="@(ToggleUserBannedAsync)"/>
        </ChildContent>
    </MudTooltip>
}

@code {

    [Parameter, EditorRequired, Required]
    public User User { get; set; } = null!;

    private async Task ToggleUserBannedAsync(bool flag)
    {
        Contract.Assert(User.PrimaryKey is not null);
        await UserRepository.ToggleBanUserAsync(User.PrimaryKey.Value, flag)
            .ConfigureAwait(false);
        User.IsBanned = flag;
    }

}