// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using X39.UnitedTacticalForces.Api.Data;

#nullable disable

namespace X39.UnitedTacticalForces.Api.Data.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20230222002451_AddingIsActiveToTerrain")]
    partial class AddingIsActiveToTerrain
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.Property<long>("RolesPrimaryKey")
                        .HasColumnType("bigint");

                    b.Property<Guid>("UsersPrimaryKey")
                        .HasColumnType("uuid");

                    b.HasKey("RolesPrimaryKey", "UsersPrimaryKey");

                    b.HasIndex("UsersPrimaryKey");

                    b.ToTable("RoleUser");
                });

            modelBuilder.Entity("X39.UnitedTacticalForces.Api.Data.Authority.Role", b =>
                {
                    b.Property<long>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PrimaryKey"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PrimaryKey");

                    b.HasIndex("Identifier")
                        .IsUnique();

                    b.ToTable("Privileges");

                    b.HasData(
                        new
                        {
                            PrimaryKey = 1L,
                            Category = "General",
                            Identifier = "admin",
                            Title = "Admin"
                        },
                        new
                        {
                            PrimaryKey = 2L,
                            Category = "Events",
                            Identifier = "event-create",
                            Title = "Events erstellen"
                        },
                        new
                        {
                            PrimaryKey = 3L,
                            Category = "Events",
                            Identifier = "event-modify",
                            Title = "Alle events bearbeiten"
                        },
                        new
                        {
                            PrimaryKey = 4L,
                            Category = "Events",
                            Identifier = "event-delete",
                            Title = "Alle events löschen"
                        },
                        new
                        {
                            PrimaryKey = 5L,
                            Category = "Terrains",
                            Identifier = "terrain-create",
                            Title = "Terrain anlegen"
                        },
                        new
                        {
                            PrimaryKey = 6L,
                            Category = "Terrains",
                            Identifier = "terrain-modify",
                            Title = "Terrain bearbeiten"
                        },
                        new
                        {
                            PrimaryKey = 7L,
                            Category = "Terrains",
                            Identifier = "terrain-delete",
                            Title = "Terrain löschen"
                        },
                        new
                        {
                            PrimaryKey = 8L,
                            Category = "ModPacks",
                            Identifier = "modpack-create",
                            Title = "ModPack anlegen"
                        },
                        new
                        {
                            PrimaryKey = 9L,
                            Category = "ModPacks",
                            Identifier = "modpack-modify",
                            Title = "ModPack bearbeiten"
                        },
                        new
                        {
                            PrimaryKey = 10L,
                            Category = "ModPacks",
                            Identifier = "modpack-delete",
                            Title = "ModPack löschen"
                        });
                });

            modelBuilder.Entity("X39.UnitedTacticalForces.Api.Data.Authority.User", b =>
                {
                    b.Property<Guid>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte[]>("Avatar")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("AvatarMimeType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EMail")
                        .HasColumnType("text");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("SteamId64")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("PrimaryKey");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("X39.UnitedTacticalForces.Api.Data.Authority.UserModPackMeta", b =>
                {
                    b.Property<Guid>("UserFk")
                        .HasColumnType("uuid");

                    b.Property<long>("ModPackFk")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("TimeStampDownloaded")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("UserFk", "ModPackFk");

                    b.HasIndex("ModPackFk");

                    b.ToTable("UserModPackMetas");
                });

            modelBuilder.Entity("X39.UnitedTacticalForces.Api.Data.Core.ModPack", b =>
                {
                    b.Property<long>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PrimaryKey"));

                    b.Property<string>("Html")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid>("OwnerFk")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("TimeStampCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("TimeStampUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PrimaryKey");

                    b.HasIndex("OwnerFk");

                    b.ToTable("ModPacks");
                });

            modelBuilder.Entity("X39.UnitedTacticalForces.Api.Data.Core.Terrain", b =>
                {
                    b.Property<long>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PrimaryKey"));

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("ImageMimeType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PrimaryKey");

                    b.ToTable("Terrains");
                });

            modelBuilder.Entity("X39.UnitedTacticalForces.Api.Data.Eventing.Event", b =>
                {
                    b.Property<Guid>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatedByFk")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("HostedByFk")
                        .HasColumnType("uuid");

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("ImageMimeType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("ModPackFk")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("ScheduledFor")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("ScheduledForOriginal")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("TerrainFk")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("TimeStampCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PrimaryKey");

                    b.HasIndex("CreatedByFk");

                    b.HasIndex("HostedByFk");

                    b.HasIndex("ModPackFk");

                    b.HasIndex("TerrainFk");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.HasOne("X39.UnitedTacticalForces.Api.Data.Authority.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("X39.UnitedTacticalForces.Api.Data.Authority.User", null)
                        .WithMany()
                        .HasForeignKey("UsersPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("X39.UnitedTacticalForces.Api.Data.Authority.UserModPackMeta", b =>
                {
                    b.HasOne("X39.UnitedTacticalForces.Api.Data.Core.ModPack", "ModPack")
                        .WithMany("UserMetas")
                        .HasForeignKey("ModPackFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("X39.UnitedTacticalForces.Api.Data.Authority.User", "User")
                        .WithMany("ModPackMetas")
                        .HasForeignKey("UserFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModPack");

                    b.Navigation("User");
                });

            modelBuilder.Entity("X39.UnitedTacticalForces.Api.Data.Core.ModPack", b =>
                {
                    b.HasOne("X39.UnitedTacticalForces.Api.Data.Authority.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("X39.UnitedTacticalForces.Api.Data.Eventing.Event", b =>
                {
                    b.HasOne("X39.UnitedTacticalForces.Api.Data.Authority.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedByFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("X39.UnitedTacticalForces.Api.Data.Authority.User", "HostedBy")
                        .WithMany()
                        .HasForeignKey("HostedByFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("X39.UnitedTacticalForces.Api.Data.Core.ModPack", "ModPack")
                        .WithMany()
                        .HasForeignKey("ModPackFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("X39.UnitedTacticalForces.Api.Data.Core.Terrain", "Terrain")
                        .WithMany()
                        .HasForeignKey("TerrainFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("HostedBy");

                    b.Navigation("ModPack");

                    b.Navigation("Terrain");
                });

            modelBuilder.Entity("X39.UnitedTacticalForces.Api.Data.Authority.User", b =>
                {
                    b.Navigation("ModPackMetas");
                });

            modelBuilder.Entity("X39.UnitedTacticalForces.Api.Data.Core.ModPack", b =>
                {
                    b.Navigation("UserMetas");
                });
#pragma warning restore 612, 618
        }
    }
}
